{"version":3,"sources":["serviceWorker.js","constants/actionTypes.js","reducers/productsReducer.js","reducers/messagesReducer.js","constants/answerTypes.js","reducers/loginReducer.js","reducers/index.js","reducers/routingReducer.js","api/productsApi.js","api/loginImedApi.js","sagas/index.js","components/ProductList.js","components/ProductAdd.js","components/Message/InfoMessage.js","actions/index.js","constants/messages.js","components/TabRouter.js","components/Spinner.js","containers/ProductsContainer.js","containers/HomeContainer.js","containers/ListsContainer.js","containers/TabsContainer.js","components/Message/WarnMessage.js","components/Login.js","containers/LoginContainer.js","components/PrivateRoute.js","components/TopBar.js","App.js","Root.js","AppFetch.js","index.js"],"names":["Boolean","window","location","hostname","match","LOAD_BASE_PRODUCTS","API_LOAD_BASE_PRODUCTS","SHOW_WARN_MESSAGE","LOADING_DATA","LOGIN_USER_REQUEST","LOGIN_USER_RESPONSE","API_LOGIN_USER","sortProductList","a","b","initialState","list","new","productsReducer","state","arguments","length","undefined","action","type","newProduct","payload","Object","toConsumableArray","concat","sort","indexProduct","slice","popUpInitialState","infoMessage","warnMessage","errorMessage","loadingInitialState","isLoadingData","OK","isRequesting","user","pass","loginUserData","status","rootReducer","combineReducers","products","popUpMessages","objectSpread","message","loadingMessages","isLoading","changingRoute","currentPath","path","login","allProducts","getAllProducts","Promise","resolve","setTimeout","loginUser","resData","options","method","headers","Content-Type","body","toUpperCase","fetch","process","then","response","text","xmlData","parseString","err","result","LoginUserResponse","LoginUserResult","setLoginObject","Response","Content","catch","error","setErrorLoginObject","content","Status","Message","addInfo","AdditionalInformation","guid","AnswerGUID","userName","Item","Name","_","console","log","loadBaseProductsSaga2","loginUserSaga","watchLoadBaseProducts","watchLoginUser","rootSaga","regenerator_default","wrap","_context","prev","next","put","call","sent","stop","_marked","this","_context2","_marked2","_context3","takeLatest","_marked3","_context4","_marked4","_context5","all","_marked5","ProductList","renderList","productLst","_this","props","map","product","index","renderItem","react_default","createElement","List_default","dense","Divider_default","key","ref","litem","LItemRef","style","backgroundColor","getListItem","_this2","d","myDiv","width","margin","overflowY","height","scrollTop","scrollHeight","scrollToNewProduct","onRemoveProduct","ListItem_default","divider","ListItemAvatar_default","Avatar_default","AddShoppingCart_default","fontFamily","ListItemSecondaryAction_default","IconButton_default","onClick","aria-label","Delete_default","scrollIntoView","block","behavior","Component","ProductAdd","handleOnclickAdd","e","txtProducto","value","onAddProduct","select","focus","handleKeyPress","event","handleChange","titleCase","target","str","toLowerCase","split","word","charAt","join","position","bottom","TextField_default","label","variant","autoFocus","inputProps","maxLength","onChange","inputRef","field","onPaste","preventDefault","onKeyPress","Button_default","color","size","InfoMessage","_this$props","onInfoMessageClose","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","open","onClose","SnackbarContent_default","aria-describedby","id","display","alignItems","Info_default","fontSize","opacity","marginRight","showInfoMessage","showWarnMessage","InfoMessages","MSG_EMPTY_PRODUCT","MSG_DUPLICATED_PRODUCT","TabRouter","manageRouteChange","changeRoute","connect","dispatch","Spinner","className","react_spinners","loading","ProductsContainer","handleAddProduct","res","addProduct","indexOf","handleRemoveProduct","removeProduct","_this$props2","apiLoadBaseProducts","_this$props3","components_Spinner","components_ProductList","components_ProductAdd","Message_InfoMessage","components_TabRouter","HomeContainer","textAlign","lists","ListsContainer","n","listStyleType","Link","to","url","Route","component","List","_ref","params","tabLinks","TabsContainer","selectedTab","findIndex","l","Tabs_default","indicatorColor","textColor","centered","Tab_default","WarnMessage","onWarnMessageClose","Warning_default","Login","handleLoginClick","txtUser","txtPass","onLoginClick","placeholder","defaultValue","required","autoComplete","LoginContainer","handleLogin","from","Message_WarnMessage","components_Login","Redirect","PrivateRoute","rest","objectWithoutProperties","assign","render","fontFamil","TopBar","getLoginControls","logout","float","substring","marginTop","AppBar_default","overflow","AppTab","components_TopBar","containers_TabsContainer","Switch","exact","components_PrivateRoute","Root","store","persistor","react_redux_es","integration_react","BrowserRouter","basename","App","__MUI_USE_NEXT_TYPOGRAPHY_VARIANTS__","sagaMiddleware","createSagaMiddleware","persistConfig","storage","persistedReducer","persistReducer","createStore","compose","applyMiddleware","persistStore","run","ReactDOM","src_Root","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.826975c6.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const LOAD_BASE_PRODUCTS = 'LOAD_BASE_PRODUCTS';\r\nexport const API_LOAD_BASE_PRODUCTS = 'API_LOAD_BASE_PRODUCTS';\r\n\r\nexport const ADD_NEW_PRODUCT = 'ADD_NEW_PRODUCT';\r\nexport const REMOVE_NEW_PRODUCT = 'REMOVE_NEW_PRODUCT';\r\n\r\nexport const SHOW_INFO_MESSAGE = 'SHOW_INFO_MESSAGE';\r\nexport const SHOW_ERROR_MESSAGE = 'SHOW_ERROR_MESSAGE';\r\nexport const SHOW_WARN_MESSAGE = 'SHOW_WARN_MESSAGE';\r\n\r\nexport const LOADING_DATA = 'LOADING_DATA';\r\n\r\nexport const CHANGE_ROUTE = 'CHANGE_ROUTE';\r\n\r\nexport const LOGIN_USER_REQUEST = 'LOGIN_USER_REQUEST';\r\nexport const LOGIN_USER_RESPONSE = 'LOGIN_USER_RESPONSE';\r\nexport const LOGOUT_USER = 'LOGOUT_USER';\r\nexport const API_LOGIN_USER = 'API_LOGIN_USER';\r\n","import { ADD_NEW_PRODUCT, REMOVE_NEW_PRODUCT, LOAD_BASE_PRODUCTS} from '../constants/actionTypes';\r\n\r\nconst sortProductList = (a, b) => (a < b) ? -1 : 1;\r\n\r\nconst initialState = {list: [], new: \"\"}\r\n\r\nconst productsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    \r\n    case ADD_NEW_PRODUCT:\r\n      const { newProduct } = action.payload;\r\n      return { list: [...state.list, newProduct].sort(sortProductList), new: newProduct };\r\n    \r\n    case REMOVE_NEW_PRODUCT:\r\n      const { indexProduct } = action.payload;      \r\n      return { list: [...state.list.slice(0, indexProduct), ...state.list.slice(indexProduct+1)].sort(sortProductList), new:\"\"  }\r\n    \r\n    case LOAD_BASE_PRODUCTS:\r\n      return { list: action.payload, new: \"\" };\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default productsReducer;","import { SHOW_INFO_MESSAGE, SHOW_ERROR_MESSAGE, SHOW_WARN_MESSAGE, LOADING_DATA } from '../constants/actionTypes';\r\n\r\nconst popUpInitialState = { infoMessage: \"\", warnMessage: \"\", errorMessage: \"\" };\r\nconst loadingInitialState = { isLoadingData: false };\r\n\r\nconst popUpMessageReducer = (state = popUpInitialState, action) => {  \r\n  switch (action.type) {    \r\n    case SHOW_INFO_MESSAGE:\r\n      return { ...state, infoMessage: action.payload.message };\r\n    case SHOW_WARN_MESSAGE:\r\n      return { ...state, warnMessage: action.payload.message };\r\n    case SHOW_ERROR_MESSAGE:\r\n      return { ...state, errorMessage: action.payload.message };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst loadingMessageReducer = (state = loadingInitialState, action) => {\r\n  switch (action.type) {    \r\n    case LOADING_DATA:\r\n      return { ...state,  isLoadingData: action.payload.isLoading };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport { popUpMessageReducer, loadingMessageReducer };\r\n","export const OK \t\t= 'OK';\r\nexport const ERROR \t\t= 'ERROR';\r\nexport const WARNING \t= 'WARNING';\r\nexport const OTHER \t\t= 'OTHER';\r\nexport const NOT_SET \t= 'NOT_SET';\r\nexport const NOT_LOGGED = 'NOT_LOGGED';","import { LOGIN_USER_REQUEST, LOGIN_USER_RESPONSE, LOGOUT_USER } from '../constants/actionTypes';\r\nimport { NOT_LOGGED } from './../constants/answerTypes';\r\n\r\nconst loginUserData = { status: NOT_LOGGED };\r\nconst initialState = { isRequesting: false, user: \"\", pass: \"\", loginUserData }\r\n\r\nconst loginReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_USER_REQUEST:\r\n      return {\r\n        ...state,\r\n        isRequesting: true,\r\n        user: action.payload.user,\r\n        pass: action.payload.pass,\r\n      };\r\n    case LOGIN_USER_RESPONSE:\r\n      return {\r\n        ...state,\r\n        isRequesting: false,\r\n        loginUserData: action.payload.loginUserData,\r\n      };\r\n    case LOGOUT_USER:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { loginReducer };\r\n","import { combineReducers } from 'redux';\r\nimport productsReducer from './productsReducer'\r\nimport { popUpMessageReducer, loadingMessageReducer } from './messagesReducer';\r\nimport { changeRouteReducer } from './routingReducer'\r\nimport { loginReducer } from './loginReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    products: productsReducer,\r\n    popUpMessages: popUpMessageReducer,\r\n    loadingMessages: loadingMessageReducer,\r\n    changingRoute: changeRouteReducer,\r\n    login: loginReducer\r\n});\r\n\r\nexport default rootReducer;","import { CHANGE_ROUTE } from '../constants/actionTypes';\r\n\r\nconst changeRouteReducer = (state = \"/\", action) => {\r\n    switch (action.type) {\r\n        case CHANGE_ROUTE:\r\n            return { ...state, currentPath: action.payload.path };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport { changeRouteReducer };","const sleep = (milliseconds) => {\r\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n}\r\n\r\nconst allProducts = [\"Pan\", \"Leche\", \"Azucar\", \"Huevos\"];\r\n\r\nconst getAllProducts = () => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve(allProducts);\r\n      }, 500);\r\n    });\r\n};\r\n\r\n\r\nclass ProductServiceApi {\r\n\r\n    static getProducts() {\r\n        return new Promise((resolve) => {\r\n          setTimeout(() => {\r\n            resolve(allProducts);\r\n          }, 1500);\r\n        });\r\n      }   \r\n}\r\nexport { ProductServiceApi, getAllProducts, sleep, allProducts };","import { parseString } from 'xml2js';\r\nimport { ERROR } from './../constants/answerTypes'; \r\nimport { SYSTEM_NAME } from './../constants/system';\r\n\r\nconst loginUser = (user, pass) => {\r\n    let resData = \"\";\r\n    const options = {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'text/xml; charset=utf-8'},\r\n        body: '<soapenv:Envelope xmlns:soapenv=\\'http://schemas.xmlsoap.org/soap/envelope/\\' ' +  \r\n            'xmlns:log=\\'http://Imed.com.ar/FwkImed/Login/\\' ' + \r\n            'xmlns:fwk=\\'FwkImed.SecurityCommon.Implementations\\'>' + \r\n            '<soapenv:Header/><soapenv:Body><log:LoginUser><fwk:User>' +\r\n            '<fwk:UserId>' + user.toUpperCase() + '</fwk:UserId>' +\r\n            '<fwk:Password>' + pass + '</fwk:Password>' +\r\n            '<fwk:System>' + SYSTEM_NAME + '</fwk:System>' +\r\n            '</fwk:User></log:LoginUser></soapenv:Body></soapenv:Envelope>'\r\n    }\r\n    return fetch(`${process.env.REACT_APP_LOGIN_IMED_ROUTE}/Login/Services/Login.asmx`, options)\r\n    .then(response => response.text())\r\n    .then(xmlData => parseString(xmlData, (err, result) => resData = result['soap:Envelope']['soap:Body'][0].LoginUserResponse[0].LoginUserResult[0]))\r\n    .then(() => setLoginObject(resData.Response[0], resData.Content[0]))\r\n    .catch(error => setErrorLoginObject(error));\r\n}\r\n\r\nconst setLoginObject = (response, content) => {\r\n    const login = {\r\n        status: response.Status[0],\r\n        message: response.Message[0],\r\n        addInfo: response.AdditionalInformation[0],\r\n        guid: response.AnswerGUID[0],\r\n        userName: content.Item[0].Name[0]._,\r\n    };\r\n    return login;\r\n}\r\n\r\nconst setErrorLoginObject = (error) => {\r\n    const login = {\r\n        status: ERROR,\r\n        message: \"Error al Realizar la llamada al WS\",\r\n        addInfo: error,\r\n        guid: \"\",\r\n        userName: \"\",\r\n    };\r\n    console.log(error);\r\n    return login;\r\n}\r\n\r\nexport { loginUser };\r\n","/* eslint-disable */\r\nimport { delay } from 'redux-saga';\r\nimport { put, all, takeLatest, call } from 'redux-saga/effects';\r\nimport { \r\n  LOAD_BASE_PRODUCTS, LOADING_DATA, API_LOAD_BASE_PRODUCTS,\r\n  LOGIN_USER_REQUEST, LOGIN_USER_RESPONSE, API_LOGIN_USER, \r\n  SHOW_WARN_MESSAGE, \r\n} from '../constants/actionTypes';\r\nimport { OK } from './../constants/answerTypes';\r\nimport { getAllProducts, sleep, allProducts } from '../api/productsApi';\r\nimport { loginUser } from '../api/loginImedApi';\r\nimport { loadProducts } from './apiCalls';\r\n\r\nfunction* loadBaseProductsSaga2() {\r\n  yield put({ type: LOADING_DATA, payload: {isLoading:true} })  \r\n  //yield sleep(3000);\r\n  //yield call(sleep,3000);\r\n  //const products = allProducts;  \r\n  const products = yield call(getAllProducts);  \r\n  //const products = yield call(loadProducts);  \r\n  yield put({ type: LOAD_BASE_PRODUCTS, payload: products })\r\n  yield put({ type: LOADING_DATA, payload: {isLoading:false} })\r\n}\r\n\r\nfunction* loginUserSaga(action) {\r\n  yield put({ type: LOGIN_USER_REQUEST, payload: action.payload })  \r\n  const loginUserData = yield call(loginUser, action.payload.user, action.payload.pass);\r\n  yield put({ type: LOGIN_USER_RESPONSE, payload: {loginUserData: loginUserData} })\r\n  if (loginUserData.status !== OK){\r\n    yield put({ type: SHOW_WARN_MESSAGE, payload: {message: loginUserData.message + \" -> \" + loginUserData.addInfo} })\r\n  }  \r\n}\r\n\r\n\r\nfunction* watchLoadBaseProducts() {\r\n  yield takeLatest(API_LOAD_BASE_PRODUCTS, loadBaseProductsSaga2)\r\n}\r\nfunction* watchLoginUser() {\r\n  yield takeLatest(API_LOGIN_USER, loginUserSaga)\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    watchLoadBaseProducts(),\r\n    watchLoginUser(),\r\n  ])\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport AddShoppingCart from '@material-ui/icons/AddShoppingCart';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\n\r\nclass ProductList extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                ref={(d) => this.myDiv = d}\r\n                style={{ width: '80%', margin: '0 auto', overflowY: 'auto', height: '72%', }}\r\n            >\r\n                {this.renderList()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.myDiv.scrollTop = this.myDiv.scrollHeight;\r\n        this.scrollToNewProduct();\r\n    }\r\n\r\n    renderList = () => {\r\n        const { products } = this.props;\r\n        const productLst = products.map((product, index) =>\r\n            this.renderItem(product, index));\r\n        return (\r\n            productLst.length > 0 &&\r\n            <List dense>\r\n                <Divider />\r\n                {productLst}\r\n            </List>\r\n        );\r\n    };\r\n\r\n    renderItem = (product, index) => {\r\n        const { newProduct } = this.props;\r\n        if (product === newProduct) {\r\n            return (\r\n                <div key={product} ref={(litem) => this.LItemRef = litem} style={{backgroundColor:\"#f5f5f5\"}}>\r\n                   {this.getListItem(product, index)}\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div key={product}>\r\n                   {this.getListItem(product, index)}\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n    getListItem(product, index) {\r\n        const { onRemoveProduct } = this.props;\r\n        return (\r\n            <ListItem divider={true}>\r\n                <ListItemAvatar>\r\n                    <Avatar>\r\n                        <AddShoppingCart />\r\n                    </Avatar>\r\n                </ListItemAvatar>\r\n                <label style={{ fontFamily: 'Roboto' }}>&nbsp;{product}</label>\r\n                <ListItemSecondaryAction>\r\n                    <IconButton onClick={() => onRemoveProduct(index)} aria-label=\"Delete\">\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n        );\r\n    }\r\n\r\n    scrollToNewProduct() {\r\n        if (this.LItemRef) {\r\n            this.LItemRef.scrollIntoView({ block: \"end\", behavior: \"instant\" });\r\n        }\r\n    }\r\n}\r\n\r\nProductList.propTypes = {\r\n    onRemoveProduct: PropTypes.func.isRequired,\r\n    products: PropTypes.array.isRequired,\r\n    newProduct: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ProductList;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nclass ProductAdd extends Component {\r\n    render() { \r\n        return (\r\n            <div style={{ position: 'relative', bottom: '5px', width: '100%', height: '120px' }}>\r\n                <div>\r\n                    <TextField label=\"Producto\" margin=\"normal\" variant=\"outlined\" autoFocus\r\n                        inputProps={{ maxLength: 20 }}\r\n                        onChange={this.handleChange}\r\n                        inputRef={field => this.txtProducto = field}\r\n                        onPaste={e => e.preventDefault()}\r\n                        onKeyPress={this.handleKeyPress}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Button color=\"primary\" variant=\"contained\" size=\"medium\"\r\n                        onClick={this.handleOnclickAdd}>\r\n                        Agregar\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    handleOnclickAdd = (e) => {\r\n        const newProduct = this.txtProducto.value;\r\n        const { onAddProduct } = this.props\r\n        if (onAddProduct(newProduct)){\r\n            this.txtProducto.value = \"\";\r\n        }\r\n        this.txtProducto.select();\r\n        this.txtProducto.focus();\r\n    };\r\n\r\n    handleKeyPress = event => {\r\n        if (event.key === \"Enter\") {\r\n            this.handleOnclickAdd();\r\n        }\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.txtProducto.value = this.titleCase(e.target.value);\r\n    };\r\n\r\n    titleCase = (str) => {\r\n        return str.toLowerCase().split(' ').map(function (word) {\r\n            return (word.charAt(0).toUpperCase() + word.slice(1));\r\n        }).join(' ');\r\n    }\r\n}\r\n\r\nProductAdd.propTypes = {\r\n    onAddProduct: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ProductAdd;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nclass InfoMessage extends Component {    \r\n\r\n    render() {\r\n        const { onInfoMessageClose, message } = this.props;\r\n        return (\r\n            <div>\r\n                <Snackbar\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                    autoHideDuration={ 3000 }\r\n                    open={ message !== \"\" }\r\n                    onClose={ onInfoMessageClose }\r\n                >\r\n                    <SnackbarContent\r\n                        style={{ backgroundColor: \"#3700B3\" }}\r\n                        aria-describedby=\"message-id\"\r\n                        message={\r\n                            <span id=\"message-id\" style={{ display: 'flex', alignItems: 'center', }}>\r\n                                <InfoIcon style={{ fontSize: 20, opacity: 0.9, marginRight: 10 }} />\r\n                                { message }\r\n                            </span>}\r\n                    />\r\n                </Snackbar>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nInfoMessage.propTypes = {\r\n    onInfoMessageClose: PropTypes.func.isRequired,\r\n    message: PropTypes.string.isRequired\r\n};\r\n\r\nexport default InfoMessage;","import { \r\n    ADD_NEW_PRODUCT, REMOVE_NEW_PRODUCT, \r\n    SHOW_INFO_MESSAGE, LOADING_DATA, SHOW_WARN_MESSAGE,\r\n    LOAD_BASE_PRODUCTS, API_LOAD_BASE_PRODUCTS, \r\n    CHANGE_ROUTE,\r\n    LOGIN_USER_REQUEST, LOGIN_USER_RESPONSE, API_LOGIN_USER, LOGOUT_USER, } from '../constants/actionTypes';\r\n\r\n//PRODUCTS\r\nexport const apiLoadBaseProducts = products => ({\r\n    type: API_LOAD_BASE_PRODUCTS,\r\n    payload: {products}\r\n});\r\nexport const loadBaseProducts = products => ({\r\n    type: LOAD_BASE_PRODUCTS,\r\n    payload: {products}\r\n});\r\nexport const addProduct = product => ({\r\n    type: ADD_NEW_PRODUCT,\r\n    payload: {newProduct: product}\r\n});\r\nexport const removeProduct = index => ({\r\n    type: REMOVE_NEW_PRODUCT,\r\n    payload: {indexProduct: index}\r\n});\r\n\r\n//MESSAGES\r\nexport const showInfoMessage = message => ({\r\n    type: SHOW_INFO_MESSAGE,\r\n    payload: {message: message}\r\n});\r\nexport const showWarnMessage = message => ({\r\n    type: SHOW_WARN_MESSAGE,\r\n    payload: {message: message}\r\n});\r\nexport const setLoadingData = isLoading => ({\r\n    type: LOADING_DATA,\r\n    payload: {isLoading: isLoading}\r\n});\r\n\r\n//ROUTING\r\nexport const changeRoute = path => ({\r\n    type: CHANGE_ROUTE,\r\n    payload: {path: path}\r\n});\r\n\r\n//LOGIN\r\nexport const loginUserRequest = (user, pass) => ({\r\n    type: LOGIN_USER_REQUEST,\r\n    payload: {isRequesting: true, user, pass}\r\n});\r\nexport const loginUserResponse = (loginUserData) => ({\r\n    type: LOGIN_USER_RESPONSE,\r\n    payload: {isRequesting: false, loginUserData}\r\n});\r\nexport const apiLoginUser = (user, pass) => ({\r\n    type: API_LOGIN_USER,\r\n    payload: {user, pass}\r\n});\r\nexport const logoutUser = () => ({\r\n    type: LOGOUT_USER\r\n});\r\n","export const InfoMessages = {\r\n    MSG_EMPTY_PRODUCT: \"Por Favor Escriba un Nombre de Producto\",\r\n    MSG_DUPLICATED_PRODUCT: \"El Producto ya Existe\",\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { changeRoute } from '../actions/index';\r\n\r\nclass TabRouter extends Component {\r\n    componentDidMount() {\r\n        this.manageRouteChange();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.manageRouteChange();\r\n    }\r\n\r\n    render() { return (<div></div>);}\r\n\r\n    manageRouteChange = () => {\r\n        const { changeRoute, currentPath } = this.props;        \r\n        if (currentPath !== this.props.path)\r\n            changeRoute(this.props.path);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentPath: state.changingRoute.currentPath,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeRoute: path => { dispatch(changeRoute(path)) },\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TabRouter);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { GridLoader } from 'react-spinners';\r\nimport './../styles/Component.css';\r\n\r\nclass Spinner extends Component {\r\n    render() {\r\n        const { isLoading, size, message } = this.props;\r\n        return (\r\n            isLoading &&\r\n            <div className=\"center\">\r\n                <GridLoader\r\n                    size={size}\r\n                    color={'#123abc'}\r\n                    loading={true}\r\n                />\r\n                <h3>{message}</h3>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSpinner.propTypes = {\r\n    isLoading: PropTypes.bool,\r\n    size: PropTypes.number,\r\n    message: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoadingData: state.loadingMessages.isLoadingData,\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Spinner);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ProductList from '../components/ProductList';\r\nimport ProductAdd from '../components/ProductAdd';\r\nimport InfoMessage from '../components/Message/InfoMessage';\r\nimport './../styles/Container.css';\r\nimport { addProduct, showInfoMessage, removeProduct, apiLoadBaseProducts } from '../actions/index';\r\nimport { InfoMessages } from '../constants/messages';\r\nimport TabRouter from '../components/TabRouter';\r\nimport Spinner from '../components/Spinner';\r\n\r\nclass ProductsContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        const { apiLoadBaseProducts, products } = this.props;\r\n        if (products && products.length === 0) {\r\n            apiLoadBaseProducts();\r\n        }        \r\n    }\r\n    \r\n    render() {\r\n        const { products, infoMessage, onInfoMessageClose, removeProduct, isLoadingData, newProduct } = this.props;       \r\n        return (\r\n            !isLoadingData ?\r\n            <div className=\"Container\">\r\n                <ProductList onRemoveProduct={removeProduct} products={products} newProduct={newProduct} />\r\n                <ProductAdd onAddProduct={this.handleAddProduct} />\r\n                <InfoMessage onInfoMessageClose={onInfoMessageClose} message={infoMessage} />           \r\n                <TabRouter path={this.props.match.path} />                \r\n            </div>\r\n            :\r\n            <Spinner isLoading={isLoadingData} size={30} message=\"Cargando...\"/>\r\n        );\r\n    }\r\n\r\n    handleAddProduct = (text) => {\r\n        var res = false;\r\n        const { products, addProduct, showInfoMessage } = this.props;\r\n        if (text) {\r\n            if (products.indexOf(text) < 0) {\r\n                addProduct(text);\r\n            res = true;            \r\n            } else {\r\n                showInfoMessage(InfoMessages.MSG_DUPLICATED_PRODUCT);\r\n            }\r\n        } else {\r\n            showInfoMessage(InfoMessages.MSG_EMPTY_PRODUCT);\r\n        }\r\n        return res;        \r\n    };\r\n\r\n    handleRemoveProduct = (index) => {\r\n        const { removeProduct } = this.props;\r\n        removeProduct(index);\r\n    };    \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        products: state.products.list,\r\n        newProduct: state.products.new,\r\n        infoMessage: state.popUpMessages.infoMessage,\r\n        isLoadingData: state.loadingMessages.isLoadingData,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addProduct: text => { dispatch(addProduct(text)) },\r\n        removeProduct: index => { dispatch(removeProduct(index)) },\r\n        showInfoMessage: message => { dispatch(showInfoMessage(message)) },\r\n        onInfoMessageClose: () => { dispatch(showInfoMessage(\"\")) },\r\n        apiLoadBaseProducts: () => { dispatch(apiLoadBaseProducts()) },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsContainer);\r\n","import React, { Component } from 'react';\r\nimport TabRouter from '../components/TabRouter';\r\nimport './../styles/Container.css';\r\n\r\nclass HomeContainer extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 style={{color:\"rgb(118, 116, 243)\"}} >Lista de Mandados</h2>\r\n                <TabRouter path={this.props.match.path} />\r\n                <div style={{textAlign: \"center\", }}>\r\n                    <h5 style={{color:\"rgb(118, 116, 243)\"}} >{process.env.REACT_APP_VERSION}</h5>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomeContainer;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Link } from \"react-router-dom\";\r\nimport TabRouter from '../components/TabRouter';\r\nimport './../styles/Container.css';\r\n\r\nconst lists = [\"Lista1\", \"Lista2\", \"Lista3\", \"Lista4\", \"Lista5\",];\r\n\r\nclass ListsContainer extends Component {\r\n    render() {\r\n        const { match, user } = this.props;\r\n        return (\r\n            <div className=\"Container\">\r\n                <h1>Listas de Compras</h1>\r\n                <ul>\r\n                    {\r\n                        lists.map((n, index) => {\r\n                            return <li key={n} style={{listStyleType:\"none\"}}>\r\n                                <Link to={`${match.url}/${user}/${index + 1}`}>\r\n                                    Lista {index + 1}\r\n                                </Link>\r\n                            </li>;\r\n                        })\r\n                    }\r\n                </ul>\r\n                <TabRouter path={this.props.match.path} />\r\n                <Route path={`${match.url}/:user/:id`} component={List} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst List = ({ match }) => { return (<div>Lista Nro:{match.params.id} de {match.params.user}</div>); }\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.login.user\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ListsContainer);\r\n\r\n/*render={(props) => <div>Lista Nro: {props.match.params.id}</div>}*/","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport './../styles/Container.css';\r\n\r\nconst tabLinks = [\r\n    { to: \"/\", label: \"Inicio\" },\r\n    { to: \"/Products\", label: \"Productos\" },\r\n    { to: \"/Lists\", label: \"Listas\" }\r\n];\r\n\r\nclass TabsContainer extends Component {\r\n    render() {\r\n        const { currentPath } = this.props;\r\n        const selectedTab = currentPath ? tabLinks.findIndex((l) => l.to === currentPath) : false;\r\n        return (\r\n            <div>\r\n                <Tabs\r\n                    value={selectedTab}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    centered\r\n                >\r\n                    {\r\n                        tabLinks.map((l, index) => <Tab key={index} component={Link} to={l.to} label={l.label} />)\r\n                    }\r\n                </Tabs>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentPath: state.changingRoute.currentPath,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TabsContainer);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\n\r\nclass WarnMessage extends Component {    \r\n\r\n    render() {\r\n        const { onWarnMessageClose, message } = this.props;\r\n        return (\r\n            <div>\r\n                <Snackbar\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                    autoHideDuration={ 3000 }\r\n                    open={ message !== \"\" }\r\n                    onClose={ onWarnMessageClose }\r\n                >\r\n                    <SnackbarContent\r\n                        style={{ backgroundColor: \"#FFBF00\" }}\r\n                        aria-describedby=\"message-id\"\r\n                        message={\r\n                            <span id=\"message-id\" style={{ display: 'flex', alignItems: 'center', }}>\r\n                                <WarningIcon style={{ fontSize: 20, opacity: 0.9, marginRight: 10 }} />\r\n                                { message }\r\n                            </span>}\r\n                    />\r\n                </Snackbar>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nWarnMessage.propTypes = {\r\n    onWarnMessageClose: PropTypes.func.isRequired,\r\n    message: PropTypes.string.isRequired\r\n};\r\n\r\nexport default WarnMessage;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './../styles/Login.css';\r\n\r\nclass Login extends Component {\r\n    render() {\r\n        const { user, pass } = this.props;\r\n        return (\r\n            <div className=\"login-div\">            \r\n            <div className=\"login-container\">\r\n                <div className=\"login\" id=\"login\">\r\n                    <header>\r\n                        <h4>Login</h4>\r\n                    </header>\r\n                    <form className=\"login-form\">\r\n                        <input \r\n                            ref={field => this.txtUser = field}\r\n                            type=\"text\" \r\n                            className=\"login-input\" \r\n                            placeholder=\"Usuario\"\r\n                            defaultValue={user}\r\n                            required autoFocus />\r\n                        <input \r\n                            ref={field => this.txtPass = field}\r\n                            type=\"password\" \r\n                            className=\"login-input\" \r\n                            placeholder=\"Contraseña\" \r\n                            defaultValue={pass}\r\n                            required autoComplete=\"true\" />\r\n                        <div className=\"submit-container\">\r\n                            <button \r\n                                onClick={(e) => this.handleLoginClick(e)} \r\n                                className=\"login-button\">LOGIN</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n\r\n    handleLoginClick = (e) => {\r\n        e.preventDefault();\r\n        const user = this.txtUser.value;\r\n        const pass = this.txtPass.value;\r\n        if (!user){\r\n            this.txtUser.focus();\r\n        }else if (!pass) {\r\n            this.txtPass.focus();\r\n        }\r\n        const { onLoginClick } = this.props;\r\n        onLoginClick(user, pass);\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    onLoginClick: PropTypes.func.isRequired,\r\n    user: PropTypes.string,\r\n    pass: PropTypes.string,\r\n};\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport WarnMessage from '../components/Message/WarnMessage';\r\nimport Login from '../components/Login';\r\nimport Spinner from '../components/Spinner';\r\nimport { showWarnMessage } from '../actions/index';\r\nimport { apiLoginUser as login } from '../actions/index';\r\nimport { OK } from '../constants/answerTypes';\r\n\r\nclass LoginContainer extends Component {\r\n    render() {\r\n        const { isRequesting, loginUserData, user, pass, currentPath, warnMessage, onWarnMessageClose } = this.props;\r\n        const from = currentPath ? currentPath : \"/\";\r\n        return (\r\n            (!isRequesting) ?\r\n                (loginUserData.status !== OK) ?\r\n                    <div>\r\n                        <WarnMessage onWarnMessageClose={onWarnMessageClose} message={warnMessage} />\r\n                        <Login onLoginClick={this.handleLogin} user={user} pass={pass} />\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <Redirect to={from} />\r\n                    </div>\r\n                :\r\n                <Spinner isLoading={isRequesting} size={30} message=\"Validando...\"/>\r\n        );\r\n    }\r\n\r\n    handleLogin = (user, pass) => {\r\n        const { showWarnMessage } = this.props;\r\n        if (!user) {\r\n            showWarnMessage(\"Por favor ingrese un Usuario\");\r\n        } else if (!pass) {\r\n            showWarnMessage(\"Por favor ingrese una Contraseña\");\r\n        } else {\r\n            const { login } = this.props;\r\n            login(user, pass);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { onWarnMessageClose } = this.props;\r\n        onWarnMessageClose();\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loginUserData: state.login.loginUserData,\r\n        currentPath: state.changingRoute.currentPath,\r\n        warnMessage: state.popUpMessages.warnMessage,\r\n        isRequesting: state.login.isRequesting,\r\n        user: state.login.user,\r\n        pass: state.login.pass,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        login: (user, pass) => { dispatch(login(user, pass)) },\r\n        showWarnMessage: message => { dispatch(showWarnMessage(message)) },\r\n        onWarnMessageClose: () => { dispatch(showWarnMessage(\"\")) },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer);\r\n","import React, { Component } from 'react';\r\nimport { Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from '@material-ui/core/Button';\r\nimport TabRouter from './TabRouter';\r\nimport { OK } from '../constants/answerTypes';\r\n\r\n\r\nclass PrivateRoute extends Component {\r\n    render() {\r\n        const { component: Component, loginUserData, ...rest } = this.props;\r\n        return (\r\n            <Route\r\n                {...rest}\r\n                render={(props) => (\r\n                    (loginUserData.status !== OK) ?\r\n                        <div>\r\n                            <TabRouter path={this.props.path} />\r\n                            <br />\r\n                            <label style={{ fontFamil: 'Roboto' }}>Usuario no logueado  =></label>\r\n                            <Button color=\"primary\" component={Link} to=\"/Login\" from={this.props.path}>LOGIN</Button>\r\n                        </div>\r\n                        :\r\n                        <Component {...props} />\r\n                )}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loginUserData: state.login.loginUserData,\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport { logoutUser } from '../actions/index';\r\nimport { OK } from '../constants/answerTypes';\r\n\r\nclass TopBar extends Component {\r\n    render() {\r\n        return (\r\n            <AppBar position=\"static\">\r\n                <div style={{ width: \"100%\", overflow: \"hidden\", backgroundColor: \"rgb(118, 116, 243)\" }}>\r\n                    <div style={{ width: \"120px\", float: \"left\" }}>\r\n                        <h3>Mandados</h3>\r\n                    </div>\r\n                    {this.getLoginControls()}\r\n                </div>\r\n            </AppBar>\r\n        );\r\n    }\r\n\r\n    getLoginControls = () => {\r\n        const { loginUserData, logout } = this.props;\r\n        return (\r\n            (loginUserData.status === OK) ?\r\n            <div>\r\n                <div style={{ textAlign: \"center\", float: \"left\" }}>\r\n                    <h5>\"{loginUserData.userName.substring(0,22)}\"</h5>\r\n                </div>\r\n                <div style={{textAlign: \"right\", float: \"right\", marginTop:\"12px\" }}>\r\n                    <Button \r\n                        color=\"secondary\" variant=\"contained\" \r\n                        size=\"small\" onClick={() => logout()}\r\n                    >\r\n                        Logout\r\n                    </Button> \r\n                    &nbsp;\r\n                </div>                \r\n            </div>\r\n            :\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loginUserData: state.login.loginUserData,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        logout: () => { dispatch(logoutUser()) },\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopBar);\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport ProductsContainer from './containers/ProductsContainer';\r\nimport HomeContainer from './containers/HomeContainer';\r\nimport ListsContainer from './containers/ListsContainer';\r\nimport TabsContainer from './containers/TabsContainer';\r\nimport LoginContainer from './containers/LoginContainer';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport TopBar from './components/TopBar';\r\nimport './styles/App.css';\r\n\r\nclass AppTab extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <TopBar />\r\n        <TabsContainer />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={HomeContainer} />\r\n          <Route path=\"/Products\" component={ProductsContainer} />\r\n          <PrivateRoute path=\"/Lists\" component={ListsContainer} />\r\n          <Route path=\"/Login\" component={LoginContainer} />\r\n          <Route render={() => (<div><h2 style={{ color: \"red\" }}>La página solicitada NO existe</h2></div>)} />\r\n        </Switch>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AppTab;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport App from './App';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nclass Root extends Component {\r\n    render() {\r\n        const {store, persistor} = this.props;\r\n        return (\r\n            <Provider store={store}>\r\n                <PersistGate loading={null} persistor={persistor}>\r\n                    <Router basename={process.env.REACT_APP_HOME_PAGE}>\r\n                        <Route path=\"/\" component={App} />\r\n                    </Router>\r\n                </PersistGate>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\nRoot.propTypes = {\r\n    store: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Root;","import React, { Component } from 'react';\r\nimport { parseString } from 'xml2js';\r\n\r\nclass AppFetch extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {data:\"\", number:0};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>DATA:</h3><div><pre>{JSON.stringify(this.state.data, null, 2)} </pre></div>\r\n                <br/>\r\n                <h3>TIMES: {this.state.number}</h3>\r\n                <button type=\"button\" onClick={this.fetchJsonData}>JSON</button>\r\n                &nbsp;&nbsp;\r\n                <button type=\"button\" onClick={this.fetchXmlDataGet}>XML GET</button>\r\n                &nbsp;&nbsp;\r\n                <button type=\"button\" onClick={this.fetchXmlDataPost}>XML POST</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    fetchJsonData = () => {\r\n        fetch('http://date.jsontest.com/')        \r\n        .then(response => response.json())\r\n        .then(data => this.setState({number: this.state.number+1, data:data}))\r\n    }\r\n\r\n    fetchXmlDataGet = () => {\r\n        let resData = \"\";\r\n        fetch('http://test.imed.com.ar/Login/Services/Login.asmx/LoginUserPlain?userId=SSANCH&password=Inicio00&systemId=Mandados.Site')\r\n        .then(response => response.text())\r\n        .then(xmlData => parseString(xmlData, (err, result) => resData = result.AnswerOfUserComplete))\r\n        .then(() => this.setLoginObject(resData.Response[0], resData.Content[0]))\r\n        .catch(error => console.log(\"ERROR ->\" + error));\r\n    }\r\n\r\n    fetchXmlDataPost = () => {\r\n        let resData = \"\";\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'text/xml; charset=utf-8', //'SOAPAction': 'http://Imed.com.ar/FwkImed/Login/LoginUserPlain'\r\n            },\r\n            body: '<soapenv:Envelope xmlns:soapenv=\\'http://schemas.xmlsoap.org/soap/envelope/\\' xmlns:log=\\'http://Imed.com.ar/FwkImed/Login/\\' xmlns:fwk=\\'FwkImed.SecurityCommon.Implementations\\'> <soapenv:Header/> <soapenv:Body> <log:LoginUser> <fwk:User> <fwk:UserId>SSANCH</fwk:UserId> <fwk:Password>Inicio00</fwk:Password> <fwk:System>Mandados.Site</fwk:System> </fwk:User> </log:LoginUser> </soapenv:Body> </soapenv:Envelope>'\r\n        }\r\n\r\n        fetch('http://test.imed.com.ar/Login/Services/Login.asmx', options)\r\n        .then(response => response.text())\r\n        .then(xmlData => parseString(xmlData, (err, result) => resData = result['soap:Envelope']['soap:Body'][0].LoginUserResponse[0].LoginUserResult[0]))\r\n        .then(() => this.setLoginObject(resData.Response[0], resData.Content[0]))\r\n        .catch(error => console.log(\"ERROR ->\" + error));\r\n    }\r\n\r\n    setLoginObject(response, content){\r\n        const login = {\r\n            status: response.Status[0],\r\n            message: response.Message[0],\r\n            addInfo: response.AdditionalInformation[0],\r\n            guid: response.AnswerGUID[0],\r\n            userName: content.Item[0].Name[0]._,\r\n        };\r\n        this.setState({number: this.state.number+1, data:login});\r\n    }\r\n}\r\n\r\nexport default AppFetch;\r\n","/* eslint-disable */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { logger } from 'redux-logger';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './styles/index.css';\r\nimport rootReducer from './reducers/index';\r\nimport rootSaga from './sagas/index';\r\nimport Root from './Root';\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport AppFetch from './AppFetch';\r\n\r\nwindow.__MUI_USE_NEXT_TYPOGRAPHY_VARIANTS__ = true;\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage: storage,\r\n}\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\nconst store = createStore(persistedReducer, compose(applyMiddleware(sagaMiddleware)));\r\nconst persistor = persistStore(store);\r\n\r\n// const store = createStore(\r\n//     rootReducer,\r\n//     compose(applyMiddleware(sagaMiddleware) ,\r\n//     )//window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n// );\r\n\r\n//console.log('store', store);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nReactDOM.render(\r\n    <Root store={store} persistor={persistor} />,\r\n    //<AppFetch />,\r\n    //<AppScroll />,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
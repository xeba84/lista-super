{"version":3,"sources":["serviceWorker.js","constants/actionTypes.js","reducers/productsReducer.js","reducers/messagesReducer.js","constants/answerTypes.js","reducers/loginReducer.js","reducers/index.js","reducers/routingReducer.js","api/productsApi.js","api/loginImedApi.js","sagas/index.js","components/ProductList.js","components/ProductAdd.js","components/Message/InfoMessage.js","actions/index.js","constants/messages.js","components/TabRouter.js","components/Spinner.js","containers/ProductsContainer.js","containers/HomeContainer.js","containers/ListsContainer.js","containers/TabsContainer.js","components/Message/WarnMessage.js","components/Login.js","containers/LoginContainer.js","components/PrivateRoute.js","components/TopBar.js","App.js","Root.js","AppFetch.js","index.js"],"names":["Boolean","window","location","hostname","match","LOAD_BASE_PRODUCTS","API_LOAD_BASE_PRODUCTS","SHOW_WARN_MESSAGE","LOADING_DATA","LOGIN_USER_REQUEST","LOGIN_USER_RESPONSE","API_LOGIN_USER","sortProductList","a","b","productsReducer","state","arguments","length","undefined","action","type","newProduct","payload","Object","toConsumableArray","concat","sort","indexProduct","slice","popUpInitialState","infoMessage","warnMessage","errorMessage","loadingInitialState","isLoadingData","OK","initialState","isRequesting","user","pass","loginUserData","status","rootReducer","combineReducers","products","popUpMessages","objectSpread","message","loadingMessages","isLoading","changingRoute","currentPath","path","login","allProducts","getAllProducts","Promise","resolve","setTimeout","loginUser","resData","options","method","headers","Content-Type","body","toUpperCase","fetch","process","then","response","text","xmlData","parseString","err","result","LoginUserResponse","LoginUserResult","setLoginObject","Response","Content","catch","error","setErrorLoginObject","content","Status","Message","addInfo","AdditionalInformation","guid","AnswerGUID","userName","Item","Name","_","console","log","loadBaseProductsSaga2","loginUserSaga","watchLoadBaseProducts","watchLoginUser","rootSaga","regenerator_default","wrap","_context","prev","next","put","call","sent","stop","_marked","this","_context2","_marked2","_context3","takeLatest","_marked3","_context4","_marked4","_context5","all","_marked5","ProductList","renderList","productLst","_this","props","map","product","index","renderItem","react_default","createElement","List_default","dense","Divider_default","onRemoveProduct","ListItem_default","key","divider","ListItemAvatar_default","Avatar_default","AddShoppingCart_default","style","fontFamily","ListItemSecondaryAction_default","IconButton_default","onClick","aria-label","Delete_default","_this2","ref","d","myDiv","width","margin","overflowY","height","scrollTop","scrollHeight","Component","ProductAdd","handleOnclickAdd","e","txtProducto","value","onAddProduct","select","focus","handleKeyPress","event","handleChange","titleCase","target","str","toLowerCase","split","word","charAt","join","position","bottom","TextField_default","label","variant","autoFocus","inputProps","maxLength","onChange","inputRef","field","onPaste","preventDefault","onKeyPress","Button_default","color","size","InfoMessage","_this$props","onInfoMessageClose","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","open","onClose","SnackbarContent_default","backgroundColor","aria-describedby","id","display","alignItems","Info_default","fontSize","opacity","marginRight","showInfoMessage","showWarnMessage","InfoMessages","MSG_EMPTY_PRODUCT","MSG_DUPLICATED_PRODUCT","TabRouter","manageRouteChange","changeRoute","connect","dispatch","Spinner","className","react_spinners","loading","ProductsContainer","handleAddProduct","res","addProduct","indexOf","handleRemoveProduct","removeProduct","_this$props2","apiLoadBaseProducts","_this$props3","components_Spinner","components_ProductList","components_ProductAdd","Message_InfoMessage","components_TabRouter","HomeContainer","textAlign","lists","ListsContainer","n","listStyleType","Link","to","url","Route","component","List","_ref","params","tabLinks","TabsContainer","selectedTab","findIndex","l","Tabs_default","indicatorColor","textColor","centered","Tab_default","WarnMessage","onWarnMessageClose","Warning_default","Login","handleLoginClick","txtUser","txtPass","onLoginClick","placeholder","defaultValue","required","autoComplete","LoginContainer","handleLogin","from","Message_WarnMessage","components_Login","Redirect","PrivateRoute","rest","objectWithoutProperties","assign","render","fontFamil","TopBar","getLoginControls","logout","float","substring","marginTop","AppBar_default","overflow","AppTab","components_TopBar","containers_TabsContainer","Switch","exact","components_PrivateRoute","Root","store","react_redux_es","BrowserRouter","basename","App","__MUI_USE_NEXT_TYPOGRAPHY_VARIANTS__","sagaMiddleware","createSagaMiddleware","createStore","compose","applyMiddleware","logger","__REDUX_DEVTOOLS_EXTENSION__","run","ReactDOM","src_Root","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.68793849.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const LOAD_BASE_PRODUCTS = 'LOAD_BASE_PRODUCTS';\r\nexport const API_LOAD_BASE_PRODUCTS = 'API_LOAD_BASE_PRODUCTS';\r\n\r\nexport const ADD_NEW_PRODUCT = 'ADD_NEW_PRODUCT';\r\nexport const REMOVE_NEW_PRODUCT = 'REMOVE_NEW_PRODUCT';\r\n\r\nexport const SHOW_INFO_MESSAGE = 'SHOW_INFO_MESSAGE';\r\nexport const SHOW_ERROR_MESSAGE = 'SHOW_ERROR_MESSAGE';\r\nexport const SHOW_WARN_MESSAGE = 'SHOW_WARN_MESSAGE';\r\n\r\nexport const LOADING_DATA = 'LOADING_DATA';\r\n\r\nexport const CHANGE_ROUTE = 'CHANGE_ROUTE';\r\n\r\nexport const LOGIN_USER_REQUEST = 'LOGIN_USER_REQUEST';\r\nexport const LOGIN_USER_RESPONSE = 'LOGIN_USER_RESPONSE';\r\nexport const LOGOUT_USER = 'LOGOUT_USER';\r\nexport const API_LOGIN_USER = 'API_LOGIN_USER';\r\n","import { ADD_NEW_PRODUCT, REMOVE_NEW_PRODUCT, LOAD_BASE_PRODUCTS} from '../constants/actionTypes';\r\n\r\nconst sortProductList = (a, b) => (a < b) ? -1 : 1;\r\n\r\nconst productsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case ADD_NEW_PRODUCT:\r\n      const { newProduct } = action.payload;\r\n      return [...state, newProduct].sort(sortProductList);\r\n    case REMOVE_NEW_PRODUCT:\r\n      const { indexProduct } = action.payload;      \r\n      return [...state.slice(0, indexProduct), ...state.slice(indexProduct+1)].sort(sortProductList);\r\n    case LOAD_BASE_PRODUCTS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default productsReducer;","import { SHOW_INFO_MESSAGE, SHOW_ERROR_MESSAGE, SHOW_WARN_MESSAGE, LOADING_DATA } from '../constants/actionTypes';\r\n\r\nconst popUpInitialState = { infoMessage: \"\", warnMessage: \"\", errorMessage: \"\" };\r\nconst loadingInitialState = { isLoadingData: false };\r\n\r\nconst popUpMessageReducer = (state = popUpInitialState, action) => {  \r\n  switch (action.type) {    \r\n    case SHOW_INFO_MESSAGE:\r\n      return { ...state, infoMessage: action.payload.message };\r\n    case SHOW_WARN_MESSAGE:\r\n      return { ...state, warnMessage: action.payload.message };\r\n    case SHOW_ERROR_MESSAGE:\r\n      return { ...state, errorMessage: action.payload.message };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst loadingMessageReducer = (state = loadingInitialState, action) => {\r\n  switch (action.type) {    \r\n    case LOADING_DATA:\r\n      return { ...state,  isLoadingData: action.payload.isLoading };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport { popUpMessageReducer, loadingMessageReducer };\r\n","export const OK \t\t= 'OK';\r\nexport const ERROR \t\t= 'ERROR';\r\nexport const WARNING \t= 'WARNING';\r\nexport const OTHER \t\t= 'OTHER';\r\nexport const NOT_SET \t= 'NOT_SET';\r\nexport const NOT_LOGGED = 'NOT_LOGGED';","import { LOGIN_USER_REQUEST, LOGIN_USER_RESPONSE, LOGOUT_USER } from '../constants/actionTypes';\r\nimport { NOT_LOGGED } from './../constants/answerTypes';\r\n\r\nconst loginUserData = { status: NOT_LOGGED };\r\nconst initialState = { isRequesting: false, user: \"\", pass: \"\", loginUserData }\r\n\r\nconst loginReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_USER_REQUEST:\r\n      return {\r\n        ...state,\r\n        isRequesting: true,\r\n        user: action.payload.user,\r\n        pass: action.payload.pass,\r\n      };\r\n    case LOGIN_USER_RESPONSE:\r\n      return {\r\n        ...state,\r\n        isRequesting: false,\r\n        loginUserData: action.payload.loginUserData,\r\n      };\r\n    case LOGOUT_USER:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { loginReducer };\r\n","import { combineReducers } from 'redux';\r\nimport productsReducer from './productsReducer'\r\nimport { popUpMessageReducer, loadingMessageReducer } from './messagesReducer';\r\nimport { changeRouteReducer } from './routingReducer'\r\nimport { loginReducer } from './loginReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    products: productsReducer,\r\n    popUpMessages: popUpMessageReducer,\r\n    loadingMessages: loadingMessageReducer,\r\n    changingRoute: changeRouteReducer,\r\n    login: loginReducer\r\n});\r\n\r\nexport default rootReducer;","import { CHANGE_ROUTE } from '../constants/actionTypes';\r\n\r\nconst changeRouteReducer = (state = \"/\", action) => {\r\n    switch (action.type) {\r\n        case CHANGE_ROUTE:\r\n            return { ...state, currentPath: action.payload.path };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport { changeRouteReducer };","const sleep = (milliseconds) => {\r\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n}\r\n\r\nconst allProducts = [\"Pan\", \"Leche\", \"Azucar\", \"Huevos\"];\r\n\r\nconst getAllProducts = () => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve(allProducts);\r\n      }, 500);\r\n    });\r\n};\r\n\r\n\r\nclass ProductServiceApi {\r\n\r\n    static getProducts() {\r\n        return new Promise((resolve) => {\r\n          setTimeout(() => {\r\n            resolve(allProducts);\r\n          }, 1500);\r\n        });\r\n      }   \r\n}\r\nexport { ProductServiceApi, getAllProducts, sleep, allProducts };","import { parseString } from 'xml2js';\r\nimport { ERROR } from './../constants/answerTypes'; \r\nimport { SYSTEM_NAME } from './../constants/system';\r\n\r\nconst loginUser = (user, pass) => {\r\n    let resData = \"\";\r\n    const options = {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'text/xml; charset=utf-8'},\r\n        body: '<soapenv:Envelope xmlns:soapenv=\\'http://schemas.xmlsoap.org/soap/envelope/\\' ' +  \r\n            'xmlns:log=\\'http://Imed.com.ar/FwkImed/Login/\\' ' + \r\n            'xmlns:fwk=\\'FwkImed.SecurityCommon.Implementations\\'>' + \r\n            '<soapenv:Header/><soapenv:Body><log:LoginUser><fwk:User>' +\r\n            '<fwk:UserId>' + user.toUpperCase() + '</fwk:UserId>' +\r\n            '<fwk:Password>' + pass + '</fwk:Password>' +\r\n            '<fwk:System>' + SYSTEM_NAME + '</fwk:System>' +\r\n            '</fwk:User></log:LoginUser></soapenv:Body></soapenv:Envelope>'\r\n    }\r\n    return fetch(`${process.env.REACT_APP_LOGIN_IMED_ROUTE}/Login/Services/Login.asmx`, options)\r\n    .then(response => response.text())\r\n    .then(xmlData => parseString(xmlData, (err, result) => resData = result['soap:Envelope']['soap:Body'][0].LoginUserResponse[0].LoginUserResult[0]))\r\n    .then(() => setLoginObject(resData.Response[0], resData.Content[0]))\r\n    .catch(error => setErrorLoginObject(error));\r\n}\r\n\r\nconst setLoginObject = (response, content) => {\r\n    const login = {\r\n        status: response.Status[0],\r\n        message: response.Message[0],\r\n        addInfo: response.AdditionalInformation[0],\r\n        guid: response.AnswerGUID[0],\r\n        userName: content.Item[0].Name[0]._,\r\n    };\r\n    return login;\r\n}\r\n\r\nconst setErrorLoginObject = (error) => {\r\n    const login = {\r\n        status: ERROR,\r\n        message: \"Error al Realizar la llamada al WS\",\r\n        addInfo: error,\r\n        guid: \"\",\r\n        userName: \"\",\r\n    };\r\n    console.log(error);\r\n    return login;\r\n}\r\n\r\nexport { loginUser };\r\n","/* eslint-disable */\r\nimport { delay } from 'redux-saga';\r\nimport { put, all, takeLatest, call } from 'redux-saga/effects';\r\nimport { \r\n  LOAD_BASE_PRODUCTS, LOADING_DATA, API_LOAD_BASE_PRODUCTS,\r\n  LOGIN_USER_REQUEST, LOGIN_USER_RESPONSE, API_LOGIN_USER, \r\n  SHOW_WARN_MESSAGE, \r\n} from '../constants/actionTypes';\r\nimport { OK } from './../constants/answerTypes';\r\nimport { getAllProducts, sleep, allProducts } from '../api/productsApi';\r\nimport { loginUser } from '../api/loginImedApi';\r\nimport { loadProducts } from './apiCalls';\r\n\r\nfunction* loadBaseProductsSaga2() {\r\n  yield put({ type: LOADING_DATA, payload: {isLoading:true} })  \r\n  //yield sleep(3000);\r\n  //yield call(sleep,3000);\r\n  //const products = allProducts;  \r\n  const products = yield call(getAllProducts);  \r\n  //const products = yield call(loadProducts);  \r\n  yield put({ type: LOAD_BASE_PRODUCTS, payload: products })\r\n  yield put({ type: LOADING_DATA, payload: {isLoading:false} })\r\n}\r\n\r\nfunction* loginUserSaga(action) {\r\n  yield put({ type: LOGIN_USER_REQUEST, payload: action.payload })  \r\n  const loginUserData = yield call(loginUser, action.payload.user, action.payload.pass);\r\n  yield put({ type: LOGIN_USER_RESPONSE, payload: {loginUserData: loginUserData} })\r\n  if (loginUserData.status !== OK){\r\n    yield put({ type: SHOW_WARN_MESSAGE, payload: {message: loginUserData.message + \" -> \" + loginUserData.addInfo} })\r\n  }  \r\n}\r\n\r\n\r\nfunction* watchLoadBaseProducts() {\r\n  yield takeLatest(API_LOAD_BASE_PRODUCTS, loadBaseProductsSaga2)\r\n}\r\nfunction* watchLoginUser() {\r\n  yield takeLatest(API_LOGIN_USER, loginUserSaga)\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    watchLoadBaseProducts(),\r\n    watchLoginUser(),\r\n  ])\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport AddShoppingCart from '@material-ui/icons/AddShoppingCart';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\n\r\nclass ProductList extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div \r\n                ref={(d) => this.myDiv = d}\r\n                style={{ width: '80%', margin: '0 auto', overflowY:'auto', height:'72%', }}\r\n            >                \r\n                {this.renderList()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.myDiv.scrollTop = this.myDiv.scrollHeight;        \r\n    }\r\n\r\n    renderList = () => {\r\n        const { products } = this.props;        \r\n        const productLst = products.map((product, index) => \r\n                this.renderItem(product, index));\r\n        return (\r\n            productLst.length > 0 && \r\n            <List dense>\r\n                <Divider />\r\n                {productLst}\r\n            </List>\r\n        );\r\n    };\r\n\r\n    renderItem = (product, index) => {\r\n        const { onRemoveProduct } = this.props;\r\n        return (\r\n            <ListItem key={product} divider={true}>\r\n                <ListItemAvatar>\r\n                    <Avatar>\r\n                        <AddShoppingCart />\r\n                    </Avatar>\r\n                </ListItemAvatar>\r\n                <label style={{ fontFamily: 'Roboto' }}>&nbsp;{product}</label>\r\n                <ListItemSecondaryAction>\r\n                    <IconButton onClick={() => onRemoveProduct(index)} aria-label=\"Delete\">\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n        );\r\n    };\r\n}\r\n\r\nProductList.propTypes = {\r\n    onRemoveProduct: PropTypes.func.isRequired,\r\n    products: PropTypes.array.isRequired\r\n};\r\n\r\nexport default ProductList;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nclass ProductAdd extends Component {\r\n    render() { \r\n        return (\r\n            <div style={{ position: 'fixed', bottom: '5px', width: '100%', height: '120px' }}>\r\n                <div>\r\n                    <TextField label=\"Producto\" margin=\"normal\" variant=\"outlined\" autoFocus\r\n                        inputProps={{ maxLength: 20 }}\r\n                        onChange={this.handleChange}\r\n                        inputRef={field => this.txtProducto = field}\r\n                        onPaste={e => e.preventDefault()}\r\n                        onKeyPress={this.handleKeyPress}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Button color=\"primary\" variant=\"contained\" size=\"medium\"\r\n                        onClick={this.handleOnclickAdd}>\r\n                        Agregar\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    handleOnclickAdd = (e) => {\r\n        const newProduct = this.txtProducto.value;\r\n        const { onAddProduct } = this.props\r\n        if (onAddProduct(newProduct)){\r\n            this.txtProducto.value = \"\";\r\n        }\r\n        this.txtProducto.select();\r\n        this.txtProducto.focus();\r\n    };\r\n\r\n    handleKeyPress = event => {\r\n        if (event.key === \"Enter\") {\r\n            this.handleOnclickAdd();\r\n        }\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.txtProducto.value = this.titleCase(e.target.value);\r\n    };\r\n\r\n    titleCase = (str) => {\r\n        return str.toLowerCase().split(' ').map(function (word) {\r\n            return (word.charAt(0).toUpperCase() + word.slice(1));\r\n        }).join(' ');\r\n    }\r\n}\r\n\r\nProductAdd.propTypes = {\r\n    onAddProduct: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ProductAdd;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nclass InfoMessage extends Component {    \r\n\r\n    render() {\r\n        const { onInfoMessageClose, message } = this.props;\r\n        return (\r\n            <div>\r\n                <Snackbar\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                    autoHideDuration={ 3000 }\r\n                    open={ message !== \"\" }\r\n                    onClose={ onInfoMessageClose }\r\n                >\r\n                    <SnackbarContent\r\n                        style={{ backgroundColor: \"#3700B3\" }}\r\n                        aria-describedby=\"message-id\"\r\n                        message={\r\n                            <span id=\"message-id\" style={{ display: 'flex', alignItems: 'center', }}>\r\n                                <InfoIcon style={{ fontSize: 20, opacity: 0.9, marginRight: 10 }} />\r\n                                { message }\r\n                            </span>}\r\n                    />\r\n                </Snackbar>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nInfoMessage.propTypes = {\r\n    onInfoMessageClose: PropTypes.func.isRequired,\r\n    message: PropTypes.string.isRequired\r\n};\r\n\r\nexport default InfoMessage;","import { \r\n    ADD_NEW_PRODUCT, REMOVE_NEW_PRODUCT, \r\n    SHOW_INFO_MESSAGE, LOADING_DATA, SHOW_WARN_MESSAGE,\r\n    LOAD_BASE_PRODUCTS, API_LOAD_BASE_PRODUCTS, \r\n    CHANGE_ROUTE,\r\n    LOGIN_USER_REQUEST, LOGIN_USER_RESPONSE, API_LOGIN_USER, LOGOUT_USER, } from '../constants/actionTypes';\r\n\r\n//PRODUCTS\r\nexport const apiLoadBaseProducts = products => ({\r\n    type: API_LOAD_BASE_PRODUCTS,\r\n    payload: {products}\r\n});\r\nexport const loadBaseProducts = products => ({\r\n    type: LOAD_BASE_PRODUCTS,\r\n    payload: {products}\r\n});\r\nexport const addProduct = product => ({\r\n    type: ADD_NEW_PRODUCT,\r\n    payload: {newProduct: product}\r\n});\r\nexport const removeProduct = index => ({\r\n    type: REMOVE_NEW_PRODUCT,\r\n    payload: {indexProduct: index}\r\n});\r\n\r\n//MESSAGES\r\nexport const showInfoMessage = message => ({\r\n    type: SHOW_INFO_MESSAGE,\r\n    payload: {message: message}\r\n});\r\nexport const showWarnMessage = message => ({\r\n    type: SHOW_WARN_MESSAGE,\r\n    payload: {message: message}\r\n});\r\nexport const setLoadingData = isLoading => ({\r\n    type: LOADING_DATA,\r\n    payload: {isLoading: isLoading}\r\n});\r\n\r\n//ROUTING\r\nexport const changeRoute = path => ({\r\n    type: CHANGE_ROUTE,\r\n    payload: {path: path}\r\n});\r\n\r\n//LOGIN\r\nexport const loginUserRequest = (user, pass) => ({\r\n    type: LOGIN_USER_REQUEST,\r\n    payload: {isRequesting: true, user, pass}\r\n});\r\nexport const loginUserResponse = (loginUserData) => ({\r\n    type: LOGIN_USER_RESPONSE,\r\n    payload: {isRequesting: false, loginUserData}\r\n});\r\nexport const apiLoginUser = (user, pass) => ({\r\n    type: API_LOGIN_USER,\r\n    payload: {user, pass}\r\n});\r\nexport const logoutUser = () => ({\r\n    type: LOGOUT_USER\r\n});\r\n","export const InfoMessages = {\r\n    MSG_EMPTY_PRODUCT: \"Por Favor Escriba un Nombre de Producto\",\r\n    MSG_DUPLICATED_PRODUCT: \"El Producto ya Existe\",\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { changeRoute } from '../actions/index';\r\n\r\nclass TabRouter extends Component {\r\n    componentDidMount() {\r\n        this.manageRouteChange();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.manageRouteChange();\r\n    }\r\n\r\n    render() { return (<div></div>);}\r\n\r\n    manageRouteChange = () => {\r\n        const { changeRoute, currentPath } = this.props;        \r\n        if (currentPath !== this.props.path)\r\n            changeRoute(this.props.path);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentPath: state.changingRoute.currentPath,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeRoute: path => { dispatch(changeRoute(path)) },\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TabRouter);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { GridLoader } from 'react-spinners';\r\nimport './../styles/Component.css';\r\n\r\nclass Spinner extends Component {\r\n    render() {\r\n        const { isLoading, size, message } = this.props;\r\n        return (\r\n            isLoading &&\r\n            <div className=\"center\">\r\n                <GridLoader\r\n                    size={size}\r\n                    color={'#123abc'}\r\n                    loading={true}\r\n                />\r\n                <h3>{message}</h3>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSpinner.propTypes = {\r\n    isLoading: PropTypes.bool,\r\n    size: PropTypes.number,\r\n    message: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoadingData: state.loadingMessages.isLoadingData,\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Spinner);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ProductList from '../components/ProductList';\r\nimport ProductAdd from '../components/ProductAdd';\r\nimport InfoMessage from '../components/Message/InfoMessage';\r\nimport './../styles/Container.css';\r\nimport { addProduct, showInfoMessage, removeProduct, apiLoadBaseProducts } from '../actions/index';\r\nimport { InfoMessages } from '../constants/messages';\r\nimport TabRouter from './../components/TabRouter';\r\nimport Spinner from './../components/Spinner';\r\n\r\nclass ProductsContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        const { apiLoadBaseProducts, products } = this.props;\r\n        if (products && products.length === 0) {\r\n            apiLoadBaseProducts();\r\n        }        \r\n    }\r\n    \r\n    render() {\r\n        const { products, infoMessage, onInfoMessageClose, removeProduct, isLoadingData } = this.props;       \r\n        return (\r\n            !isLoadingData ?\r\n            <div className=\"Container\">\r\n                <ProductList onRemoveProduct={removeProduct} products={products} />\r\n                <ProductAdd onAddProduct={this.handleAddProduct} />\r\n                <InfoMessage onInfoMessageClose={onInfoMessageClose} message={infoMessage} />           \r\n                <TabRouter path={this.props.match.path} />                \r\n            </div>\r\n            :\r\n            <Spinner isLoading={isLoadingData} size={30} message=\"Cargando...\"/>\r\n        );\r\n    }\r\n\r\n    handleAddProduct = (text) => {\r\n        var res = false;\r\n        const { products, addProduct, showInfoMessage } = this.props;\r\n        if (text) {\r\n            if (products.indexOf(text) < 0) {\r\n                addProduct(text);\r\n            res = true;            \r\n            } else {\r\n                showInfoMessage(InfoMessages.MSG_DUPLICATED_PRODUCT);\r\n            }\r\n        } else {\r\n            showInfoMessage(InfoMessages.MSG_EMPTY_PRODUCT);\r\n        }\r\n        return res;        \r\n    };\r\n\r\n    handleRemoveProduct = (index) => {\r\n        const { removeProduct } = this.props;\r\n        removeProduct(index);\r\n    };    \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        products: state.products,\r\n        infoMessage: state.popUpMessages.infoMessage,\r\n        isLoadingData: state.loadingMessages.isLoadingData,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addProduct: text => { dispatch(addProduct(text)) },\r\n        removeProduct: index => { dispatch(removeProduct(index)) },\r\n        showInfoMessage: message => { dispatch(showInfoMessage(message)) },\r\n        onInfoMessageClose: () => { dispatch(showInfoMessage(\"\")) },\r\n        apiLoadBaseProducts: () => { dispatch(apiLoadBaseProducts()) },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsContainer);","import React, { Component } from 'react';\r\nimport TabRouter from './../components/TabRouter';\r\nimport './../styles/Container.css';\r\n\r\nclass HomeContainer extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 style={{color:\"rgb(118, 116, 243)\"}} >Lista de Mandados</h2>\r\n                <TabRouter path={this.props.match.path} />\r\n                <div style={{textAlign: \"center\", }}>\r\n                    <h5 style={{color:\"rgb(118, 116, 243)\"}} >{process.env.REACT_APP_VERSION}</h5>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomeContainer;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Link } from \"react-router-dom\";\r\nimport TabRouter from './../components/TabRouter';\r\nimport './../styles/Container.css';\r\n\r\nconst lists = [\"Lista1\", \"Lista2\", \"Lista3\", \"Lista4\", \"Lista5\",];\r\n\r\nclass ListsContainer extends Component {\r\n    render() {\r\n        const { match, user } = this.props;\r\n        return (\r\n            <div className=\"Container\">\r\n                <h1>Listas de Compras</h1>\r\n                <ul>\r\n                    {\r\n                        lists.map((n, index) => {\r\n                            return <li key={n} style={{listStyleType:\"none\"}}>\r\n                                <Link to={`${match.url}/${user}/${index + 1}`}>\r\n                                    Lista {index + 1}\r\n                                </Link>\r\n                            </li>;\r\n                        })\r\n                    }\r\n                </ul>\r\n                <TabRouter path={this.props.match.path} />\r\n                <Route path={`${match.url}/:user/:id`} component={List} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst List = ({ match }) => { return (<div>Lista Nro:{match.params.id} de {match.params.user}</div>); }\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.login.user\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ListsContainer);\r\n\r\n/*render={(props) => <div>Lista Nro: {props.match.params.id}</div>}*/","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport './../styles/Container.css';\r\n\r\nconst tabLinks = [\r\n    { to: \"/\", label: \"Inicio\" },\r\n    { to: \"/Products\", label: \"Productos\" },\r\n    { to: \"/Lists\", label: \"Listas\" }\r\n];\r\n\r\nclass TabsContainer extends Component {\r\n    render() {\r\n        const { currentPath } = this.props;\r\n        const selectedTab = currentPath ? tabLinks.findIndex((l) => l.to === currentPath) : false;\r\n        return (\r\n            <div>\r\n                <Tabs\r\n                    value={selectedTab}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    centered\r\n                >\r\n                    {\r\n                        tabLinks.map((l, index) => <Tab key={index} component={Link} to={l.to} label={l.label} />)\r\n                    }\r\n                </Tabs>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentPath: state.changingRoute.currentPath,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TabsContainer);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\n\r\nclass WarnMessage extends Component {    \r\n\r\n    render() {\r\n        const { onWarnMessageClose, message } = this.props;\r\n        return (\r\n            <div>\r\n                <Snackbar\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                    autoHideDuration={ 3000 }\r\n                    open={ message !== \"\" }\r\n                    onClose={ onWarnMessageClose }\r\n                >\r\n                    <SnackbarContent\r\n                        style={{ backgroundColor: \"#FFBF00\" }}\r\n                        aria-describedby=\"message-id\"\r\n                        message={\r\n                            <span id=\"message-id\" style={{ display: 'flex', alignItems: 'center', }}>\r\n                                <WarningIcon style={{ fontSize: 20, opacity: 0.9, marginRight: 10 }} />\r\n                                { message }\r\n                            </span>}\r\n                    />\r\n                </Snackbar>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nWarnMessage.propTypes = {\r\n    onWarnMessageClose: PropTypes.func.isRequired,\r\n    message: PropTypes.string.isRequired\r\n};\r\n\r\nexport default WarnMessage;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './../styles/Login.css';\r\n\r\nclass Login extends Component {\r\n    render() {\r\n        const { user, pass } = this.props;\r\n        return (\r\n            <div className=\"login-div\">            \r\n            <div className=\"login-container\">\r\n                <div className=\"login\" id=\"login\">\r\n                    <header>\r\n                        <h4>Login</h4>\r\n                    </header>\r\n                    <form className=\"login-form\">\r\n                        <input \r\n                            ref={field => this.txtUser = field}\r\n                            type=\"text\" \r\n                            className=\"login-input\" \r\n                            placeholder=\"Usuario\"\r\n                            defaultValue={user}\r\n                            required autoFocus />\r\n                        <input \r\n                            ref={field => this.txtPass = field}\r\n                            type=\"password\" \r\n                            className=\"login-input\" \r\n                            placeholder=\"Contraseña\" \r\n                            defaultValue={pass}\r\n                            required autoComplete=\"true\" />\r\n                        <div className=\"submit-container\">\r\n                            <button \r\n                                onClick={(e) => this.handleLoginClick(e)} \r\n                                className=\"login-button\">LOGIN</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n\r\n    handleLoginClick = (e) => {\r\n        e.preventDefault();\r\n        const user = this.txtUser.value;\r\n        const pass = this.txtPass.value;\r\n        if (!user){\r\n            this.txtUser.focus();\r\n        }else if (!pass) {\r\n            this.txtPass.focus();\r\n        }\r\n        const { onLoginClick } = this.props;\r\n        onLoginClick(user, pass);\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    onLoginClick: PropTypes.func.isRequired,\r\n    user: PropTypes.string,\r\n    pass: PropTypes.string,\r\n};\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport WarnMessage from './../components/Message/WarnMessage';\r\nimport Login from './../components/Login';\r\nimport Spinner from './../components/Spinner';\r\nimport { showWarnMessage } from '../actions/index';\r\nimport { apiLoginUser as login } from '../actions/index';\r\nimport { OK } from './../constants/answerTypes';\r\n\r\nclass LoginContainer extends Component {\r\n    render() {\r\n        const { isRequesting, loginUserData, user, pass, currentPath, warnMessage, onWarnMessageClose } = this.props;\r\n        const from = currentPath ? currentPath : \"/\";\r\n        return (\r\n            (!isRequesting) ?\r\n                (loginUserData.status !== OK) ?\r\n                    <div>\r\n                        <WarnMessage onWarnMessageClose={onWarnMessageClose} message={warnMessage} />\r\n                        <Login onLoginClick={this.handleLogin} user={user} pass={pass} />\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <Redirect to={from} />\r\n                    </div>\r\n                :\r\n                <Spinner isLoading={isRequesting} size={30} message=\"Validando...\"/>\r\n        );\r\n    }\r\n\r\n    handleLogin = (user, pass) => {\r\n        const { showWarnMessage } = this.props;\r\n        if (!user) {\r\n            showWarnMessage(\"Por favor ingrese un Usuario\");\r\n        } else if (!pass) {\r\n            showWarnMessage(\"Por favor ingrese una Contraseña\");\r\n        } else {\r\n            const { login } = this.props;\r\n            login(user, pass);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { onWarnMessageClose } = this.props;\r\n        onWarnMessageClose();\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loginUserData: state.login.loginUserData,\r\n        currentPath: state.changingRoute.currentPath,\r\n        warnMessage: state.popUpMessages.warnMessage,\r\n        isRequesting: state.login.isRequesting,\r\n        user: state.login.user,\r\n        pass: state.login.pass,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        login: (user, pass) => { dispatch(login(user, pass)) },\r\n        showWarnMessage: message => { dispatch(showWarnMessage(message)) },\r\n        onWarnMessageClose: () => { dispatch(showWarnMessage(\"\")) },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer);\r\n","import React, { Component } from 'react';\r\nimport { Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from '@material-ui/core/Button';\r\nimport TabRouter from './../components/TabRouter';\r\nimport { OK } from './../constants/answerTypes';\r\n\r\n\r\nclass PrivateRoute extends Component {\r\n    render() {\r\n        const { component: Component, loginUserData, ...rest } = this.props;\r\n        return (\r\n            <Route\r\n                {...rest}\r\n                render={(props) => (\r\n                    (loginUserData.status !== OK) ?\r\n                        <div>\r\n                            <TabRouter path={this.props.path} />\r\n                            <br />\r\n                            <label style={{ fontFamil: 'Roboto' }}>Usuario no logueado  =></label>\r\n                            <Button color=\"primary\" component={Link} to=\"/Login\" from={this.props.path}>LOGIN</Button>\r\n                        </div>\r\n                        :\r\n                        <Component {...props} />\r\n                )}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loginUserData: state.login.loginUserData,\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport { logoutUser } from '../actions/index';\r\nimport { OK } from './../constants/answerTypes';\r\n\r\nclass TopBar extends Component {\r\n    render() {\r\n        return (\r\n            <AppBar position=\"static\">\r\n                <div style={{ width: \"100%\", overflow: \"hidden\", backgroundColor: \"rgb(118, 116, 243)\" }}>\r\n                    <div style={{ width: \"120px\", float: \"left\" }}>\r\n                        <h3>Mandados</h3>\r\n                    </div>\r\n                    {this.getLoginControls()}\r\n                </div>\r\n            </AppBar>\r\n        );\r\n    }\r\n\r\n    getLoginControls = () => {\r\n        const { loginUserData, logout } = this.props;\r\n        return (\r\n            (loginUserData.status === OK) ?\r\n            <div>\r\n                <div style={{ textAlign: \"center\", float: \"left\" }}>\r\n                    <h5>\"{loginUserData.userName.substring(0,22)}\"</h5>\r\n                </div>\r\n                <div style={{textAlign: \"right\", float: \"right\", marginTop:\"12px\" }}>\r\n                    <Button \r\n                        color=\"secondary\" variant=\"contained\" \r\n                        size=\"small\" onClick={() => logout()}\r\n                    >\r\n                        Logout\r\n                    </Button> \r\n                    &nbsp;\r\n                </div>                \r\n            </div>\r\n            :\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loginUserData: state.login.loginUserData,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        logout: () => { dispatch(logoutUser()) },\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopBar);\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport ProductsContainer from './containers/ProductsContainer';\r\nimport HomeContainer from './containers/HomeContainer';\r\nimport ListsContainer from './containers/ListsContainer';\r\nimport TabsContainer from './containers/TabsContainer';\r\nimport LoginContainer from './containers/LoginContainer';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport TopBar from './components/TopBar';\r\nimport './styles/App.css';\r\n\r\nclass AppTab extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <TopBar />\r\n        <TabsContainer />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={HomeContainer} />\r\n          <Route path=\"/Products\" component={ProductsContainer} />\r\n          <PrivateRoute path=\"/Lists\" component={ListsContainer} />\r\n          <Route path=\"/Login\" component={LoginContainer} />\r\n          <Route render={() => (<div><h2 style={{ color: \"red\" }}>La página solicitada NO existe</h2></div>)} />\r\n        </Switch>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AppTab;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport App from './App';\r\n\r\nclass Root extends Component {\r\n    render() {\r\n        const store = this.props.store;\r\n        return (\r\n            <Provider store={store}>\r\n                <Router basename={process.env.REACT_APP_HOME_PAGE}>\r\n                    <Route path=\"/\" component={App} />\r\n                </Router>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\nRoot.propTypes = {\r\n  store: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Root;","import React, { Component } from 'react';\r\nimport { parseString } from 'xml2js';\r\n\r\nclass AppFetch extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {data:\"\", number:0};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>DATA:</h3><div><pre>{JSON.stringify(this.state.data, null, 2)} </pre></div>\r\n                <br/>\r\n                <h3>TIMES: {this.state.number}</h3>\r\n                <button type=\"button\" onClick={this.fetchJsonData}>JSON</button>\r\n                &nbsp;&nbsp;\r\n                <button type=\"button\" onClick={this.fetchXmlDataGet}>XML GET</button>\r\n                &nbsp;&nbsp;\r\n                <button type=\"button\" onClick={this.fetchXmlDataPost}>XML POST</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    fetchJsonData = () => {\r\n        fetch('http://date.jsontest.com/')        \r\n        .then(response => response.json())\r\n        .then(data => this.setState({number: this.state.number+1, data:data}))\r\n    }\r\n\r\n    fetchXmlDataGet = () => {\r\n        let resData = \"\";\r\n        fetch('http://test.imed.com.ar/Login/Services/Login.asmx/LoginUserPlain?userId=SSANCH&password=Inicio00&systemId=Mandados.Site')\r\n        .then(response => response.text())\r\n        .then(xmlData => parseString(xmlData, (err, result) => resData = result.AnswerOfUserComplete))\r\n        .then(() => this.setLoginObject(resData.Response[0], resData.Content[0]))\r\n        .catch(error => console.log(\"ERROR ->\" + error));\r\n    }\r\n\r\n    fetchXmlDataPost = () => {\r\n        let resData = \"\";\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'text/xml; charset=utf-8', //'SOAPAction': 'http://Imed.com.ar/FwkImed/Login/LoginUserPlain'\r\n            },\r\n            body: '<soapenv:Envelope xmlns:soapenv=\\'http://schemas.xmlsoap.org/soap/envelope/\\' xmlns:log=\\'http://Imed.com.ar/FwkImed/Login/\\' xmlns:fwk=\\'FwkImed.SecurityCommon.Implementations\\'> <soapenv:Header/> <soapenv:Body> <log:LoginUser> <fwk:User> <fwk:UserId>SSANCH</fwk:UserId> <fwk:Password>Inicio00</fwk:Password> <fwk:System>Mandados.Site</fwk:System> </fwk:User> </log:LoginUser> </soapenv:Body> </soapenv:Envelope>'\r\n        }\r\n\r\n        fetch('http://test.imed.com.ar/Login/Services/Login.asmx', options)\r\n        .then(response => response.text())\r\n        .then(xmlData => parseString(xmlData, (err, result) => resData = result['soap:Envelope']['soap:Body'][0].LoginUserResponse[0].LoginUserResult[0]))\r\n        .then(() => this.setLoginObject(resData.Response[0], resData.Content[0]))\r\n        .catch(error => console.log(\"ERROR ->\" + error));\r\n    }\r\n\r\n    setLoginObject(response, content){\r\n        const login = {\r\n            status: response.Status[0],\r\n            message: response.Message[0],\r\n            addInfo: response.AdditionalInformation[0],\r\n            guid: response.AnswerGUID[0],\r\n            userName: content.Item[0].Name[0]._,\r\n        };\r\n        this.setState({number: this.state.number+1, data:login});\r\n    }\r\n}\r\n\r\nexport default AppFetch;\r\n","/* eslint-disable */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { logger } from 'redux-logger';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './styles/index.css';\r\nimport rootReducer from './reducers/index';\r\nimport rootSaga from './sagas/index';\r\nimport Root from './Root';\r\n\r\nimport AppFetch from './AppFetch';\r\n\r\nconsole.log(process.env.NODE_ENV);\r\nconsole.log(process.env.REACT_APP_API_KEY);\r\nconsole.log(process.env.PUBLIC_URL);\r\nconsole.log(process.env.REACT_APP_HOME_PAGE);\r\n\r\nwindow.__MUI_USE_NEXT_TYPOGRAPHY_VARIANTS__ = true;\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(\r\n    rootReducer,\r\n    compose (applyMiddleware(sagaMiddleware, logger) ,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nReactDOM.render(\r\n    <Root store={store} />, \r\n    //<AppFetch />,\r\n    document.getElementById('root')\r\n    );\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}